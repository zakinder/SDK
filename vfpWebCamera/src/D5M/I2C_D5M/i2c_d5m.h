#include <xbasic_types.h>
#include "../SYSTEM_CONFIG_HEADER/system_config_header.h"
int camera_exposer(u16 exposer_value);
void get_exposer();
void config_d5m_gen_testpattern(u16 pattern_num);
void d5m_color_gain();
void set_color_gain(u16 gain, u16 exp);
u16 img(u16 read_address);
void master_menu();
void cmd_menu();
void d5m_i2c_write_reg();
int d5m_i2c_write(u8 address, u16 value);
int d5m_i2c_write_to_reg(u8 address, u32 value);
void d5m_i2c_write_reg_val(u8 address, u32 value);
void d5m_registers_write(u8 address, u16 value);
int img_read_register(u8 address, u16 *value);
void d5m_config1();
void cfa_config1();
void d5m_config2();
void d5m_config3();
void d5m_config4();
void camera_hdmi_config();
void camera_vga_config();
u16 d5m_i2c_read(u8 address);
typedef struct d5m_reg {
    int chipversion;
    int row_start;
    int column_star;
    int row_size;
    int column_size;
    int horizontal_blank;
    int vertical_blank;
    int output_control;
    int shutter_width_upper;
    int shutter_width_lower;
    int pixel_clock_control;
    int restart;
    int shutter_delay;
    int reset;
    int pll_control;
    int pll_config_1;
    int pll_config_2;
    int read_mode_1;
    int read_mode_2;
    int row_address_mode;
    int column_address_mode;
    int green1_gain;
    int blue_gain;
    int red_gain;
    int green2_gain;
    int global_gain;
    int row_black_target;
    int row_black_default_offset;
    int blc_sample_size;
    int blc_tune_1;
    int blc_delta_thresholds;
    int blc_tune_2;
    int blc_target_thresholds;
    int green1_offset;
    int green2_offset;
    int black_level_calibration;
    int red_offset;
    int blue_offset;
    int test_pattern_control;
    int test_pattern_green;
    int test_pattern_red;
    int test_pattern_blue;
    int test_pattern_bar_width;
} d5m_i2c_reg;
void camera_read(d5m_i2c_reg *d5m_i2c_ptr);
void d5m_regs(d5m_i2c_reg *d5m_i2c_ptr);
void camera_update();
void d5mr_reg();
void read_exposer_register();
void read_camera_exposer(d5m_i2c_reg *d5m_i2c_ptr);
